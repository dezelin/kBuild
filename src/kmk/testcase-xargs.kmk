# $Id$
## @file
#
# kBuild - testcase for the xargs function.
#          Requires manual inspection of the output.
#
# Copyright (c) 2007 knut st. osmundsen <bird-kBuild-spam@anduin.net>
#
#
# This file is part of kLdr.
#
# kLdr is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kLdr is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kLdr; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#

DEPTH = ../..
include $(PATH_KBUILD)/header.kmk

ifneq ($(not 1),)
 $(error The 'not' function is missing)
endif
ifneq ($(eq 1,1),1)
 $(error The 'eq' function is missing)
endif


ASSERT_TRUE  = $(if $(not $(1)),$(error failure: '$(1)' isn't true))
ASSERT_FALSE = $(if       $(1) ,$(error failure: '$(1)' isn't false))

# 94 bytes
ONEARG = abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_abcdefghijklmnopqrstuvwxyz_xxxxxxxxxxxx
ITERATIONS := 0 1 2 3 4 5 6 7 8 9
ITERATIONS := $(foreach i, 0 1 2 3 4 5 6 7 8 9,$(addprefix $(i),$(ITERATIONS)))
ITERATIONS := $(foreach i, 0 1 2 3 4 5 6 7 8 9,$(addprefix $(i),$(ITERATIONS)))
ITERATIONS := $(foreach i, 0 1 2 3 4 5 6 7 8 9,$(addprefix $(i),$(ITERATIONS)))
ITERATIONS := $(foreach i, 0 1 2 3 4 5 6 7 8 9,$(addprefix $(i),$(ITERATIONS)))

# add a 5 bytes sequence number and a space, then duplicate it 10000 times:
#	100 bytes * 10000 = 1,000,000 bytes.
REALLY_LONG := $(foreach i,$(ITERATIONS),$(i)$(ONEARG))


#$(call ASSERT_TRUE, $(xargs $(ECHO) 1:, $(ECHO) 2:, $(ECHO) 3:, asdf asdf asdf asdf asdf asdf asdf adf asdf asdf))

all_recursive:
	$(xargs @$(ECHO_EXT) 1:, @$(ECHO_EXT) 2:, @$(ECHO_EXT) 3:, $(REALLY_LONG))
	$(ECHO) done

